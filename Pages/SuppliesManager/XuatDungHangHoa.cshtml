@page
@model SuppliesManagement.Pages.XuatDungHangHoaModel
@{
}

<h2>Xuất Dùng Hàng Hóa</h2>

<form method="post">
    <div class="form-group">
        <label for="KhoHang">Kho xuất:</label>
        <select class="form-control" name="khoHangID" required>
            @if (Model.KhoHangs != null && Model.KhoHangs.Any())
            {
                foreach (var kho in Model.KhoHangs)
                {
                    <option value="@kho.Id">@kho.Ten - @kho.DiaChi</option>
                }
            }
            else
            {
                <option disabled>Không có dữ liệu kho hàng</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="NgayNhan">Ngày xuất:</label>
        <input type="date" class="form-control" id="NgayNhan" name="NgayNhan" required>
    </div>
    <div class="form-group">
        <label for="NguoiNhanId">Xuất cho:</label>
        <select class="form-control" name="NguoiNhanId" required>
            @if (Model.Accounts != null && Model.Accounts.Any())
            {
                foreach (var account in Model.Accounts)
                {
                    @if (account.RoleId == 3)
                    {
                        <option value="@account.Id">@account.Username</option>
                    }
                }
            }
            else
            {
                <option disabled>Không có dữ liệu tài khoản</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="LyDoNhan">Lý do xuất:</label>
        <input type="text" class="form-control" id="LyDoNhan" name="LyDoNhan">
    </div>
    <div class="form-group">
        <label for="ThanhTien">Tổng số tiền (Chưa tính VAT):</label>
        <input type="text" class="form-control" id="ThanhTien" name="ThanhTien" readonly>
    </div>
    <br>

    <div class="table-responsive">
        <table class="table custom-table">
            <thead class="thead-dark">
                <tr>
                    <th>STT</th>
                    <th>Hàng hóa</th>
                    <th>Nhóm hàng</th>
                    <th>Số lượng</th>
                    <th>Đơn vị tính</th>
                    <th>Giá tr.thuế</th>
                    <th>VAT%</th>
                    <th>Giá s.thuế</th>
                    <th>Tiền hàng</th>
                    <th>Tổng tiền</th>
                </tr>
            </thead>
            <tbody id="hangHoaTableBody">
                @for (int i = 0; i < 1; i++)
                {
                    <tr>
                        <th>@(i + 1)</th>
                        <td>
                            <select class="form-control" name="hangHoaModels[@i].HangHoas" required onchange="updateHangHoaDetails(this)">
                                @if (Model.HangHoas != null && Model.HangHoas.Any())
                                {
                                    @foreach (var hangHoa in Model.HangHoas)
                                    {
                                        <option value="@hangHoa.Id"
                                    data-nhom="@hangHoa.NhomHang.Name"
                                    data-dvt="@hangHoa.DonViTinh.Name"
                                    data-dg="@hangHoa.DonGiaTruocThue"
                                    data-vat="@hangHoa.Vat">
                                            @hangHoa.TenHangHoa - Ngày nhập: @hangHoa.NgayNhap.ToString("dd/MM/yyyy")
                                        </option>
                                    }
                                }
                                else
                                {
                                    <option disabled>Không có dữ liệu hàng hóa</option>
                                }
                            </select>
                        </td>
                        <td>
                            <span class="group-name">@Model.HangHoas[i].NhomHang.Name"</span>
                        </td>
                        <td><input type="number" class="form-control" name="hangHoaModels[@i].SoLuong" min="1" required oninput="calculateTotals(this.closest('tr'))"></td>
                        <td><span class="unit-name">@Model.HangHoas[i].DonViTinh.Name</span></td>
                        <td><input type="text" class="form-control" name="hangHoaModels[@i].DonGiaTruocThue" min="0" required readonly oninput="calculateTotals(this.closest('tr'))"></td>
                        @*<td><input type="number" class="form-control" name="hangHoaModels[@i].VAT" min="0" max="10" required oninput="calculateTotals(this.closest('tr'))"></td>*@

                        <td>
                            <input type="number" class="form-control" name="hangHoaModels[@i].VAT"
                               value="@Model.HangHoas[i].Vat" min="0" max="100" readonly
                               oninput="calculateTotals(this.closest('tr'))">
                        </td>
                        <td><input type="text" class="form-control" name="hangHoaModels[@i].DonGiaSauThue" readonly></td>
                        <td><input type="text" class="form-control" name="hangHoaModels[@i].TongGiaTruocThue" readonly></td>
                        <td><input type="text" class="form-control" name="hangHoaModels[@i].TongGiaSauThue" readonly></td>
                    </tr>
                }
            </tbody>
        </table>
        <button type="button" class="btn btn-secondary" id="addRow">Thêm hàng hóa xuất</button>
        <button type="submit" class="btn btn-primary">Xuất hàng hóa</button>
    </div>
    @*@if (!string.IsNullOrWhiteSpace(success))
    {
    <div class="alert alert-success" role="alert">
    @success
    </div>
    }*@
</form>

<script>
    let hangHoaCount = 1; // Track row count.

    // Function to update row fields based on selected HangHoa.
    function updateHangHoaDetails(selectElement) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];

        const nhomHang = selectedOption.getAttribute('data-nhom');
        const donViTinh = selectedOption.getAttribute('data-dvt');
        const donGia = parseFloat(selectedOption.getAttribute('data-dg'));
        const vat = parseFloat(selectedOption.getAttribute('data-vat'));

        const row = selectElement.closest('tr');

        // Update fields in the row.
        row.querySelector('.group-name').textContent = nhomHang;
        row.querySelector('.unit-name').textContent = donViTinh;
        row.querySelector('input[name*="DonGiaTruocThue"]').value = donGia.toFixed(0);
        row.querySelector('input[name*="VAT"]').value = vat.toFixed(0);

        calculateTotals(row); // Recalculate totals for the row.
    }

    // Function to calculate totals for a row.
    function calculateTotals(row) {
        const qty = parseFloat(row.querySelector('input[name*="SoLuong"]').value) || 0;
        const priceBeforeTax = parseFloat(row.querySelector('input[name*="DonGiaTruocThue"]').value) || 0;
        const vat = parseFloat(row.querySelector('input[name*="VAT"]').value) || 0;

        const priceAfterTax = priceBeforeTax * (1 + vat / 100);
        row.querySelector('input[name*="DonGiaSauThue"]').value = priceAfterTax.toFixed(0);

        const totalBeforeTax = qty * priceBeforeTax;
        row.querySelector('input[name*="TongGiaTruocThue"]').value = totalBeforeTax.toFixed(0);

        const totalAfterTax = qty * priceAfterTax;
        row.querySelector('input[name*="TongGiaSauThue"]').value = totalAfterTax.toFixed(0);

        updateTotalAmount(); // Update the overall total.
    }

    // Function to update the total amount field.
    function updateTotalAmount() {
        let totalAmount = 0;

        const rows = document.querySelectorAll('.custom-table tbody tr');
        rows.forEach(row => {
            const totalRow = parseFloat(row.querySelector('input[name*="TongGiaTruocThue"]').value) || 0;
            totalAmount += totalRow;
        });

        document.getElementById('ThanhTien').value = totalAmount.toFixed(0);
    }

    // Add a new row to the table.
    document.getElementById('addRow').addEventListener('click', function () {
        const tableBody = document.getElementById('hangHoaTableBody');
        const newRow = document.createElement('tr');

        newRow.innerHTML = `
                <th>${hangHoaCount + 1}</th>
                <td>
                    <select class="form-control" name="hangHoaModels[${hangHoaCount}].HangHoas" required>
    @foreach (var hangHoa in Model.HangHoas)
    {
                                <option value="@hangHoa.Id"
                                    data-nhom="@hangHoa.NhomHang.Name"
                                    data-dvt="@hangHoa.DonViTinh.Name"
                                    data-dg="@hangHoa.DonGiaTruocThue"
                                    data-vat="@hangHoa.Vat">
            @hangHoa.TenHangHoa - Ngày nhập: @hangHoa.NgayNhap.ToString("dd/MM/yyyy")
                                </option>
    }
                    </select>
                </td>
                <td><span class="group-name"></span></td>
                <td><input type="number" class="form-control" name="hangHoaModels[${hangHoaCount}].SoLuong" min="1" required></td>
                <td><span class="unit-name"></span></td>
                <td><input type="text" class="form-control" name="hangHoaModels[${hangHoaCount}].DonGiaTruocThue" readonly></td>
                <td><input type="number" class="form-control" name="hangHoaModels[${hangHoaCount}].VAT" readonly></td>
                <td><input type="text" class="form-control" name="hangHoaModels[${hangHoaCount}].DonGiaSauThue" readonly></td>
                <td><input type="text" class="form-control" name="hangHoaModels[${hangHoaCount}].TongGiaTruocThue" readonly></td>
                <td><input type="text" class="form-control" name="hangHoaModels[${hangHoaCount}].TongGiaSauThue" readonly></td>
            `;

        tableBody.appendChild(newRow);
        hangHoaCount++;

        setupRow(newRow); // Attach event listeners to the new row.
    });

    // Setup event listeners for a row.
    function setupRow(row) {
        row.querySelector('select[name*="HangHoas"]').addEventListener('change', function () {
            updateHangHoaDetails(this);
        });
        row.querySelector('input[name*="SoLuong"]').addEventListener('input', function () {
            calculateTotals(row);
        });
    }

    // Initialize event listeners for existing rows.
    document.querySelectorAll('.custom-table tbody tr').forEach(row => setupRow(row));
</script>
