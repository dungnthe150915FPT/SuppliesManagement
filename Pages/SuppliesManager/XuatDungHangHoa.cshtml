@page
@model SuppliesManagement.Pages.SuppliesManager.XuatDungHangHoaModel
@{
}
<h2>Xuất Dùng Hàng Hóa</h2>
<link href="~/css/nhapmuahanghoa.css" rel="stylesheet" />
<form method="post">
    <div class="form-group">
        <label for="KhoHang">Kho xuất:</label>
        <select class="form-control" name="KhoHangId" required>
            @if (Model.KhoHangs != null && Model.KhoHangs.Any())
            {
                @foreach (var kho in Model.KhoHangs)
                {
                    <option value="@kho.Id">@kho.Ten - @kho.DiaChi</option>
                }
            }
            else
            {
                <option disabled>Không có kho hàng</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="NgayNhan">Ngày xuất:</label>
        <input type="date" class="form-control" name="NgayNhan" required>
    </div>
    <div class="form-group">
        <label for="NguoiNhanId">Người nhận:</label>
        <select class="form-control" name="NguoiNhanId" required>
            @if (Model.Accounts != null && Model.Accounts.Any())
            { 
                @foreach (var account in Model.Accounts)
                {
                    <option value="@account.Id">@account.Username</option>
                }
            }
            else
            {
                <option disabled>Không có người nhận</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="LyDoNhan">Lý do xuất:</label>
        <input type="text" class="form-control" name="LyDoNhan" required>
    </div>
    <div class="form-group">
        <label for="ThanhTien">Thành Tiền (Chưa tính thuế VAT):</label>
        <input id="ThanhTien" type="text" class="form-control" name="ThanhTien" readonly>
    </div>
        <div class="form-group">
        <label for="TongTien">Tổng Tiền (Đã tính thuế VAT):</label>
        <input id="TongTien" type="text" class="form-control" name="TongTien" readonly>
    </div>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Hàng hóa</th>
                    <th>Nhóm hàng</th>
                    <th>Số lượng</th>
                    <th>Đ.vị tính</th>
                    <th>Đ.giá trước thuế</th>
                    <th>VAT%</th>
                    <th>Đ.giá sau thuế</th>
                    <th>Tiền hàng</th>
                    <th>Tổng tiền</th>
                </tr>
            </thead>
            <tbody id="hangHoaTableBody">
                <!-- JavaScript will dynamically add rows here -->
            </tbody>
        </table>
        <button type="button" id="addRow" class="btn btn-secondary">Thêm hàng hóa</button>
        <button type="submit" class="btn btn-primary">Xuất hàng hóa</button>
    </div>
</form>
@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="errorAlert" class="alert alert-danger" role="alert">
        @TempData["Error"]
    </div>
}
<script>
    document.getElementById("addRow").addEventListener("click", function () {
        const tableBody = document.getElementById("hangHoaTableBody");
        const newRow = document.createElement("tr");

        newRow.innerHTML = `
                <td>
                    <select name="HangHoaIds[]" class="form-control" onchange="fillHangHoaDetails(this)" required>
                        <option value="" disabled selected>Chọn hàng hóa</option>
    @if (Model.HangHoas != null && Model.HangHoas.Any())
    {
        @foreach (var hangHoa in Model.HangHoas)
        {
                                                <option value="@hangHoa.Id"
                                        data-nhom-hang="@hangHoa.NhomHang.Name"
                                        data-don-vi-tinh="@hangHoa.DonViTinh.Name"
                                        data-gia-truoc-thue="@hangHoa.DonGiaTruocThue"
                                        data-vat="@hangHoa.Vat">
                @hangHoa.TenHangHoa
                                                </option>
        }
    }
    else
    {
                <p>Không có hàng hóa trong kho</p>
    }

                    </select>
                </td>
                <td><input type="text" name="NhomHang[]" class="form-control" readonly></td>
                <td><input type="number" name="SoLuongs[]" class="form-control" min="1" required oninput="calculateRowTotals(this.closest('tr'))"></td>
                <td><input type="text" name="DonViTinh[]" class="form-control" readonly></td>
                <td><input type="text" name="GiaTriTruocThue[]" class="form-control" readonly></td>
                <td><input type="text" name="VAT[]" class="form-control" readonly></td>
                <td><input type="text" name="GiaTriSauThue[]" class="form-control" readonly></td>
                <td><input type="text" name="TienHang[]" class="form-control" readonly></td>
                <td><input type="text" name="TongTien[]" class="form-control" readonly></td>
            `;

        tableBody.appendChild(newRow);
    });

    function fillHangHoaDetails(selectElement) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];

        const nhomHang = selectedOption.getAttribute("data-nhom-hang");
        const donViTinh = selectedOption.getAttribute("data-don-vi-tinh");
        const giaTruocThue = parseFloat(selectedOption.getAttribute("data-gia-truoc-thue"));
        const vat = parseFloat(selectedOption.getAttribute("data-vat"));

        const row = selectElement.closest("tr");

        row.querySelector('input[name="NhomHang[]"]').value = nhomHang || "";
        row.querySelector('input[name="DonViTinh[]"]').value = donViTinh || "";
        row.querySelector('input[name="GiaTriTruocThue[]"]').value = giaTruocThue.toFixed(0);
        row.querySelector('input[name="VAT[]"]').value = vat.toFixed(0);

        calculateRowTotals(row);
    }

    function calculateRowTotals(row) {
        const soLuong = parseFloat(row.querySelector('input[name="SoLuongs[]"]').value) || 0;
        const giaTruocThue = parseFloat(row.querySelector('input[name="GiaTriTruocThue[]"]').value) || 0;
        const vat = parseFloat(row.querySelector('input[name="VAT[]"]').value) || 0;

        const giaSauThue = giaTruocThue * (1 + vat / 100);
        const tienHang = soLuong * giaTruocThue;
        const tongTien = soLuong * giaSauThue;

        row.querySelector('input[name="GiaTriSauThue[]"]').value = giaSauThue.toFixed(0);
        row.querySelector('input[name="TienHang[]"]').value = tienHang.toFixed(0);
        row.querySelector('input[name="TongTien[]"]').value = tongTien.toFixed(0);

        updateTotalThanhTien();
        updateTotalTongTien();
    }

    function updateTotalThanhTien() {
        const rows = document.querySelectorAll('#hangHoaTableBody tr');
        let totalThanhTien = 0;

        rows.forEach(row => {
            const tienHang = parseFloat(row.querySelector('input[name="TienHang[]"]').value) || 0;
            totalThanhTien += tienHang;
        });

        document.getElementById('ThanhTien').value = totalThanhTien.toFixed(0);
    }
function updateTotalTongTien() {
        const rows = document.querySelectorAll('#hangHoaTableBody tr');
        let totalTongTien = 0;

        rows.forEach(row => {
            const tienHang = parseFloat(row.querySelector('input[name="TongTien[]"]').value) || 0;
            totalTongTien += tienHang;
        });

        document.getElementById('TongTien').value = totalTongTien.toFixed(0);
    }
    document.addEventListener("DOMContentLoaded", function () {
        const successAlert = document.getElementById("successAlert");
        if (successAlert) {
            setTimeout(() => {
                successAlert.style.display = "none";
            }, 10000);
        }
    });
    document.addEventListener("DOMContentLoaded", function () {
        const errorAlert = document.getElementById("errorAlert");
        if (errorAlert) {
            setTimeout(() => {
                errorAlert.style.display = "none";
            }, 10000);
        }
    });
</script>
