@page "{id:guid}"
@using SuppliesManagement.Models.ViewModels
@using System.Globalization
@model SuppliesManagement.Pages.SuppliesManager.ChiTietHoaDonNhapModel
@{
    ViewData["Title"] = "Chi Tiết Hóa Đơn Nhập";
}
<h2>Chi Tiết Hóa Đơn Nhập</h2>
<div class="row">
    <div class="col-md-6">
        <h4>Thông Tin Hóa Đơn</h4>
        <div class="form-group mb-3">
            <label>Nhà Cung Cấp:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.NhaCungCap" readonly>
        </div>
        <div class="form-group mb-3">
            <label>Nhập vào kho:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.KhoHang" readonly>
        </div>
        <div class="form-group mb-3">
            <label>Ngày Nhập:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.NgayNhap.ToString("dd/MM/yyyy")" readonly>
        </div>
        <div class="form-group mb-3">
            <label>Số Hóa Đơn:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.SoHoaDon" readonly>
        </div>
        <div class="form-group mb-3">
            <label>Tổng Tiền:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.ThanhTien.ToString("N0") VNĐ" readonly>
        </div>
        <div class="form-group mb-3">
            <label>Số Serial:</label>
            <input type="text" class="form-control" value="@Model.HoaDonNhap.Serial" readonly>
        </div>
    </div>

    <div class="col-md-6">
        @if (Model.HasPDF)
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4>Hóa Đơn PDF</h4>
                <div>
                    @* <form method="post" asp-page-handler="Export" asp-route-id="@Model.HoaDonNhap.ID" class="d-inline">
                        <button type="submit" class="btn btn-primary">Xuất Excel</button>
                    </form> *@
                    <a asp-page-handler="DownloadPDF" asp-route-id="@Model.HoaDonNhap.ID" class="btn btn-primary ml-2">Tải
                        xuống PDF</a>
                    <button type="button" class="btn btn-primary ml-2" onclick="viewExcelFile('@Model.HoaDonNhap.ID')">Xem
                        file Excel</button>
                </div>
            </div>
            <div id="pdf-container" style="width: 100%; height: 400px; overflow: auto; border: 1px solid #ddd;">
                <div id="pdf-viewer" style="width: 100%; height: 100%;"></div>
            </div>
            <div class="mt-2">
                <button id="zoom-in" class="btn btn-secondary">Phóng to</button>
                <button id="zoom-out" class="btn btn-secondary">Thu nhỏ</button>
            </div>
        }
        else
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h4>Hóa Đơn PDF</h4>
                <div>
                    <form method="post" asp-page-handler="Export" asp-route-id="@Model.HoaDonNhap.ID" class="d-inline">
                        <button type="submit" class="btn btn-primary">Xuất Excel</button>
                    </form>
                    <button type="button" class="btn btn-primary ml-2" onclick="viewExcelFile('@Model.HoaDonNhap.ID')">Xem
                        file Excel</button>
                </div>
            </div>
            <p>Không có file PDF cho hóa đơn này.</p>
        }
    </div>
</div>

<h4 class="mt-5">Danh Sách Hàng Hóa</h4>
<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Hàng Hóa</th>
                <th>Nhóm hàng</th>
                <th>Đơn vị tính</th>
                <th>Số Lượng</th>
                <th>Giá Trước Thuế (VNĐ)</th>
                <th>Giá Sau Thuế (VNĐ)</th>
                <th>Tổng Giá Trước Thuế (VNĐ)</th>
                <th>Tổng Giá Sau Thuế (VNĐ)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.HoaDonNhap.HangHoas.Count == 0)
            {
                <tr>
                    <td colspan="8" class="text-center">Không có hàng hóa nào trong hóa đơn này.</td>
                </tr>
            }
            else
            {
                @foreach (var hangHoa in Model.HoaDonNhap.HangHoas)
                {
                    <tr>
                        <td>@hangHoa.TenHangHoa</td>
                        <td>@hangHoa.NhomHangName</td>
                        <td>@hangHoa.DonViTinh</td>
                        <td>@hangHoa.SoLuong</td>
                        <td>@hangHoa.DonGiaTruocThue.ToString("#,##0")</td>
                        <td>@hangHoa.DonGiaSauThue.ToString("#,##0")</td>
                        <td>@hangHoa.TongGiaTruocThue.ToString("#,##0")</td>
                        <td>@hangHoa.TongGiaSauThue.ToString("#,##0")</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<!-- Modal -->
<div class="modal fade" id="excelPreviewModal" tabindex="-1" role="dialog" aria-labelledby="excelPreviewModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="excelPreviewModalLabel">Phiếu nhập kho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="excelPreviewContent">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <form method="post" asp-page-handler="Export" asp-route-id="@Model.HoaDonNhap.ID" class="d-inline">
                    <button type="submit" class="btn btn-primary ml-3">Xuất Excel</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @if (Model.HasPDF)
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-excel-preview/1.0.0/excel-preview.min.js"></script>
        <script>
            pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.worker.min.js';

            var url = '@Url.Page("./ChiTietHoaDonNhap", "DisplayPDF", new { id = Model.HoaDonNhap.ID })';
            var pdfDoc = null;
            var scale = 1.0;
            var canvas = document.createElement('canvas');

            function renderPage(pageNumber, scale) {
                pdfDoc.getPage(pageNumber).then(function (page) {
                    var viewport = page.getViewport({ scale: scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;
                    var renderContext = {
                        canvasContext: canvas.getContext('2d'),
                        viewport: viewport
                    };
                    page.render(renderContext);
                });
            }

            pdfjsLib.getDocument(url).promise.then(function (pdf) {
                pdfDoc = pdf;
                renderPage(1, scale);
                document.getElementById('pdf-viewer').appendChild(canvas);
            });

            document.getElementById('zoom-in').addEventListener('click', function () {
                scale *= 1.2;
                renderPage(1, scale);
            });

            document.getElementById('zoom-out').addEventListener('click', function () {
                scale /= 1.2;
                renderPage(1, scale);
            });
        </script>
    }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        function viewExcelFile(id) {
            fetch(`?handler=ViewExcel&id=${id}`)
                .then(response => response.arrayBuffer())
                .then(data => {
                    const workbook = XLSX.read(data, { type: 'array' });
                    const firstSheetName = workbook.SheetNames[0];
                    const worksheet = workbook.Sheets[firstSheetName];
                    const html = XLSX.utils.sheet_to_html(worksheet);

                    const modalContent = document.getElementById('excelPreviewContent');
                    modalContent.innerHTML = `
                                        <style>
                                            table { border-collapse: collapse; width: 100%; }
                                            th, td { 
                                                border: 1px solid #ddd; 
                                                padding: 8px; 
                                                text-align: center; 
                                                vertical-align: middle;
                                            }
                                            th { 
                                                background-color: #f2f2f2; 
                                                font-weight: bold;
                                            }
                                            .role { font-weight: bold; }
                                            .left-align { text-align: left; }
                                            .center-align { text-align: center; }
                                            .bold { font-weight: bold; }
                                        </style>
                                        ${html}
                                    `;

                    modalContent.querySelectorAll('td, th').forEach(cell => {
                        if (['Người lập phiếu', 'Người nhận hàng', 'Thủ kho', 'Kế toán', 'Giám đốc'].includes(cell.textContent.trim())) {
                            cell.classList.add('role', 'bold', 'center-align');
                        }

                        modalContent.querySelectorAll('td').forEach(cell => {
                            if (cell.textContent.trim() === 'Người nhận hàng') {
                                cell.classList.add('center-align', 'bold');
                            }
                        });
                        const leftAlignContent = [
                            'Tổng số tiền (viết bằng chữ):',
                            'Số chứng từ gốc kèm theo:',
                            'Họ và tên người giao hàng:',
                            'Địa chỉ bộ phận:',
                            'Theo hóa đơn số:',
                            'Nhập tại kho (ngăn lô):',
                            'Tổng tiền (Chưa có VAT):',
                            'Đơn vị:',
                            'Bộ phận:'
                        ];

                        const centerAlignContent = [
                            'Thành tiền',
                            'Người lập phiếu',
                            'Mẫu số: 02 – VT',
                            '(Ban hành theo Thông tư số: 200/2014/TT-BTC Ngày 22/12/2014 của Bộ Tài chính)',
                            'PHIẾU NHẬP KHO'
                        ];

                        if (leftAlignContent.some(content => cell.textContent.includes(content))) {
                            cell.classList.add('left-align');
                        } else if (centerAlignContent.some(content => cell.textContent.includes(content))) {
                            cell.classList.add('center-align');
                        }

                        // Make all th elements (column headers) bold
                        if (cell.tagName === 'TH') {
                            cell.classList.add('bold');
                        }

                        // Left-align cells in the "Tên, nhãn hiệu, quy cách..." column
                        if (cell.cellIndex === 1) {
                            cell.classList.add('left-align');
                        }

                        // Center-align the date above 'Kế toán' and 'Giám đốc'
                        if (cell.textContent.trim().match(/^\d{1,2}\/\d{1,2}\/\d{4}$/)) {
                            const nextRow = cell.parentElement.nextElementSibling;
                            if (nextRow && ['Kế toán', 'Giám đốc'].some(role => nextRow.textContent.includes(role))) {
                                cell.classList.add('center-align');
                            }
                        }

                        // Make "Tổng tiền (Chưa có VAT):" bold
                        if (cell.textContent.includes('Tổng tiền (Chưa có VAT):')) {
                            cell.classList.add('bold');
                        }

                        // Center-align "PHIẾU NHẬP KHO" and the date
                        if (cell.textContent.includes('PHIẾU NHẬP KHO') ||
                            (cell.textContent.trim().match(/^Ngày\s+\d{1,2}\s+tháng\s+\d{1,2}\s+năm\s+\d{4}$/))) {
                            cell.classList.add('center-align');
                        }

                        // Make specific headers bold
                        const boldHeaders = ['Stt', 'Tên, nhãn hiệu, quy cách, phẩm chất vật tư, dụng cụ, sản phẩm, hàng hóa',
                            'Mã số', 'Đơn vị tính', 'Số lượng', 'Đơn giá', 'Thành tiền', 'Yêu cầu', 'Thực nhập'];
                        if (boldHeaders.includes(cell.textContent.trim())) {
                            cell.classList.add('bold');
                        }

                        // Center-align "Người nhận hàng"
                        if (cell.textContent.trim() === 'Người nhận hàng') {
                            cell.classList.add('center-align');
                        }
                    });

                    // Show the modal
                    $('#excelPreviewModal').modal('show');
                });
        }
    </script>
}