@page
@model SuppliesManagement.Pages.SuppliesManager.XuatHangHoaModel
@{
}
    <div class="video-container">
        <iframe 
        style="display: none;" 
            src="https://www.youtube.com/embed/D7IdVRly8AM?autoplay=1" 
            title="YouTube video player" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen>
        </iframe>
    </div>
<h2>Xuất Dùng Hàng Hóa</h2>
<link href="~/css/nhapmuahanghoa.css" rel="stylesheet" />
<form method="post">
    <div class="form-group">
        <label for="KhoHang">Kho xuất:</label>
        <select class="form-control" name="KhoHangId" required>
            @if (Model.KhoHangs != null && Model.KhoHangs.Any())
            {
                @foreach (var kho in Model.KhoHangs)
                {
                    <option value="@kho.Id">@kho.Ten - @kho.DiaChi</option>
                }
            }
            else
            {
                <option disabled>Không có kho hàng</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="NgayNhan">Ngày xuất:</label>
        <input type="date" class="form-control" name="NgayNhan" required>
    </div>
    <div class="form-group">
        <label for="NguoiNhanId">Người nhận:</label>
        <select class="form-control" name="NguoiNhanId" required>
            @if (Model.Accounts != null && Model.Accounts.Any())
            { 
                @foreach (var account in Model.Accounts)
                {
                    <option value="@account.Id">@account.Username - @account.Fullname</option>
                }
            }
            else
            {
                <option disabled>Không có người nhận</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="LyDoNhan">Lý do xuất:</label>
        <input type="text" class="form-control" name="LyDoNhan" required>
    </div>
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Hàng hóa</th>
                    <th>Nhóm hàng</th>
                    <th>Đơn vị tính</th>
                    <th>Ngày nhập</th>
                    <th>Đơn giá</th>
                    <th>Số lượng còn lại</th>
                    <th>Số lượng xuất</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.HangHoas != null && Model.HangHoas.Any())
                {
                    @foreach (var hangHoa in Model.HangHoas.Where(h => h.SoLuongConLai > 0))
                    {
                        <tr>
                            <td>@hangHoa.TenHangHoa</td>
                            <td>@hangHoa.NhomHang.Name</td>
                            <td>@hangHoa.DonViTinh.Name</td>
                            <td>@hangHoa.NgayNhap.ToString("dd/MM/yyyy")</td>
                            <td>@hangHoa.DonGiaTruocThue.ToString("#,##0").Replace(',', '.')</td>
                            <td>@hangHoa.SoLuongConLai</td>
                            <td>
                                <input 
                                    type="number" 
                                    name="SoLuongs[@hangHoa.Id]" 
                                    class="form-control" 
                                    min="1" 
                                    max="@hangHoa.SoLuongConLai" 
                                    placeholder="Nhập SL xuất" />
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">Không có hàng hóa đủ số lượng trong kho</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <button type="submit" class="btn btn-primary">Xuất hàng hóa</button>
</form>
@if (TempData["SuccessMessage"] != null)
{
    <div id="successAlert" class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div id="errorAlert" class="alert alert-danger" role="alert">
        @TempData["Error"]
    </div>
}

<script>
    function fillHangHoaDetails(selectElement) {
        const selectedOption = selectElement.options[selectElement.selectedIndex];
        const nhomHang = selectedOption.getAttribute("data-nhom-hang");
        const donViTinh = selectedOption.getAttribute("data-don-vi-tinh");
        const giaTruocThue = parseFloat(selectedOption.getAttribute("data-gia-truoc-thue"));
        const vat = parseFloat(selectedOption.getAttribute("data-vat"));

        const row = selectElement.closest("tr");

        row.querySelector('input[name="NhomHang[]"]').value = nhomHang || "";
        row.querySelector('input[name="DonViTinh[]"]').value = donViTinh || "";
        row.querySelector('input[name="GiaTriTruocThue[]"]').value = giaTruocThue.toFixed(0);
        row.querySelector('input[name="VAT[]"]').value = vat.toFixed(0);

        calculateRowTotals(row);
    }

    function calculateRowTotals(row) {
        const soLuong = parseFloat(row.querySelector('input[name="SoLuongs[]"]').value) || 0;
        const giaTruocThue = parseFloat(row.querySelector('input[name="GiaTriTruocThue[]"]').value) || 0;
        const vat = parseFloat(row.querySelector('input[name="VAT[]"]').value) || 0;

        const giaSauThue = giaTruocThue * (1 + vat / 100);
        const tienHang = soLuong * giaTruocThue;
        const tongTien = soLuong * giaSauThue;

        row.querySelector('input[name="GiaTriSauThue[]"]').value = giaSauThue.toFixed(0);
        row.querySelector('input[name="TienHang[]"]').value = tienHang.toFixed(0);
        row.querySelector('input[name="TongTien[]"]').value = tongTien.toFixed(0);

        updateTotalThanhTien();
        updateTotalTongTien();
    }

    function updateTotalThanhTien() {
        const rows = document.querySelectorAll('#hangHoaTableBody tr');
        let totalThanhTien = 0;

        rows.forEach(row => {
            const tienHang = parseFloat(row.querySelector('input[name="TienHang[]"]').value) || 0;
            totalThanhTien += tienHang;
        });

        document.getElementById('ThanhTien').value = totalThanhTien.toFixed(0);
    }
function updateTotalTongTien() {
        const rows = document.querySelectorAll('#hangHoaTableBody tr');
        let totalTongTien = 0;

        rows.forEach(row => {
            const tienHang = parseFloat(row.querySelector('input[name="TongTien[]"]').value) || 0;
            totalTongTien += tienHang;
        });

        document.getElementById('TongTien').value = totalTongTien.toFixed(0);
    }
    document.addEventListener("DOMContentLoaded", function () {
        const successAlert = document.getElementById("successAlert");
        if (successAlert) {
            setTimeout(() => {
                successAlert.style.display = "none";
            }, 10000);
        }
    });
    document.addEventListener("DOMContentLoaded", function () {
        const errorAlert = document.getElementById("errorAlert");
        if (errorAlert) {
            setTimeout(() => {
                errorAlert.style.display = "none";
            }, 10000);
        }
    });
</script>
